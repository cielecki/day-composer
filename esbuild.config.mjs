import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, please visit the GitHub repository of this plugin.
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: [
		{ in: 'src/main.ts',        	out: 'main'  },
		{ in: 'src/styles.css',     out: 'styles' },
	],
	bundle: true,

	/* externals for Obsidian plugins */
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],

	/* output â”€ both JS *and* extracted CSS land in ./dist */
	assetNames: "assets/[name]",   // images/fonts referenced from css
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outdir: ".",
	minify: prod,
	loader: { ".css": "css" },
	jsx: "automatic",
	jsxFactory: "React.createElement",
	jsxFragment: "React.Fragment",
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
